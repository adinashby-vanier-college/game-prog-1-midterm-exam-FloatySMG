<?xml version="1.0" encoding="UTF-8"?>
<class name="Snake" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve">The Snake is the main enimy in the game. Essentially what the pig must avoid. If he eliminates the pig, the Game Over Screen is shown.</javadoc>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">This constructor allows the snake to use the method "randoDirection".</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="randomDirection()" expression-java="randomDirection()" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve">This method allows "moveAround", "eliminatePig", "randomDirection" and "move" to be called whenever tge "Act" or "Run" button is used in Greenfoot. This method also allows for when the "isGameLost" boolean is true, to run the method "transitionToGameOverWorld".</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="moveAround()" expression-java="moveAround()" enable="true"/>
                <call expression="eliminatePig()" expression-java="eliminatePig()" enable="true"/>
                <call expression="randomDirection()" expression-java="randomDirection()" enable="true"/>
                <call expression="move(1)" expression-java="move(1)" enable="true"/>
                <if condition="isGameLost()" condition-java="isGameLost()" enable="true">
                    <ifStatements>
                        <call expression="transitionToGameOverWorld()" expression-java="transitionToGameOverWorld()" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="randomDirection" enable="true">
            <javadoc xml:space="preserve">This method allows the snake to move in a random direction. As so the </javadoc>
            <params/>
            <throws/>
            <body>
                <if condition="Greenfoot.getRandomNumber(1)==1" condition-java="Greenfoot.getRandomNumber(1) == 1" enable="true">
                    <ifStatements>
                        <variable type="int" type-java="int" name="randomDirection" value="Greenfoot.getRandomNumber(360)" value-java="Greenfoot.getRandomNumber(360)" enable="true"/>
                        <call expression="turn(randomDirection)" expression-java="turn(randomDirection)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="moveAround" enable="true">
            <javadoc xml:space="preserve">This method allows for the Snake to move around the world, as well as allow him to rotate by 180* whenever he is near an edge, so he won't be stuck on walls and such.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="move(4)" expression-java="move(4)" enable="true"/>
                <if condition="isAtEdge()" condition-java="isAtEdge()" enable="true">
                    <ifStatements>
                        <call expression="turn(180)" expression-java="turn(180)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="eliminatePig" enable="true">
            <javadoc xml:space="preserve">This method allows the snake to eliminate the pig. Once the snake intersects with the pig, the pig gets removed, and plays the "lose.wav" sound effect.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="pig" value="getOneIntersectingObject(Pig.class)" value-java="getOneIntersectingObject(Pig.class)" enable="true"/>
                <if condition="pig!=null" condition-java="pig != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.removeObject(pig)" expression-java="world.removeObject(pig)" enable="true"/>
                        <call expression="Greenfoot.playSound(&quot;lose.wav&quot;)" expression-java="Greenfoot.playSound(&quot;lose.wav&quot;)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="boolean" type-java="boolean" name="isGameLost" enable="true">
            <javadoc xml:space="preserve">In this method, the game is checking to see if there are any pig classes in the game. If the pig count is equal to zero, the game will consider isGameLost to be True.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                <if condition="world.getObjects(Pig.class).isEmpty()" condition-java="world.getObjects(Pig.class).isEmpty()" enable="true">
                    <ifStatements>
                        <return value="true" value-java="true" enable="true"/>
                    </ifStatements>
                    <else>
                        <return value="false" value-java="false" enable="true"/>
                    </else>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="transitionToGameOverWorld" enable="true">
            <javadoc xml:space="preserve">This method allows the game to transition to the Game Over World.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="gameOverWorld" value="new GameOverWorld()" value-java=" new GameOverWorld()" enable="true"/>
                <call expression="Greenfoot.setWorld(gameOverWorld)" expression-java="Greenfoot.setWorld(gameOverWorld)" enable="true"/>
            </body>
        </method>
    </methods>
</class>
