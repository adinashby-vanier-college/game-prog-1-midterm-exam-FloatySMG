<?xml version="1.0" encoding="UTF-8"?>
<class name="Pig" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve">The pig class is used as the main character for the game.</javadoc>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors/>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve">This method allows "moveAndTurn" and "eat" to be called whenever tge "Act" or "Run" button is used in Greenfoot. This method also allows for the game to play the "win.wav" sound effect, and then use method "transitionToGameWonWorld".</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="moveAndTurn()" expression-java="moveAndTurn()" enable="true"/>
                <call expression="eat()" expression-java="eat()" enable="true"/>
                <if condition="isGameWon()" condition-java="isGameWon()" enable="true">
                    <ifStatements>
                        <call expression="Greenfoot.playSound(&quot;win.wav&quot;)" expression-java="Greenfoot.playSound(&quot;win.wav&quot;)" enable="true"/>
                        <call expression="transitionToGameWonWorld()" expression-java="transitionToGameWonWorld()" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="moveAndTurn" enable="true">
            <javadoc xml:space="preserve">This method allows the pig to move around with the use of the arrow keys.</javadoc>
            <params/>
            <throws/>
            <body>
                <if condition="Greenfoot.isKeyDown(&quot;left&quot;)" condition-java="Greenfoot.isKeyDown(&quot;left&quot;)" enable="true">
                    <ifStatements>
                        <call expression="move(4)" expression-java="move(4)" enable="true"/>
                        <call expression="turn(-3)" expression-java="turn(-3)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot.isKeyDown(&quot;right&quot;)" condition-java="Greenfoot.isKeyDown(&quot;right&quot;)" enable="true">
                    <ifStatements>
                        <call expression="move(4)" expression-java="move(4)" enable="true"/>
                        <call expression="turn(3)" expression-java="turn(3)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot.isKeyDown(&quot;up&quot;)" condition-java="Greenfoot.isKeyDown(&quot;up&quot;)" enable="true">
                    <ifStatements>
                        <call expression="move(4)" expression-java="move(4)" enable="true"/>
                        <call expression="turn(-3)" expression-java="turn(-3)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot.isKeyDown(&quot;down&quot;)" condition-java="Greenfoot.isKeyDown(&quot;down&quot;)" enable="true">
                    <ifStatements>
                        <call expression="move(4)" expression-java="move(4)" enable="true"/>
                        <call expression="turn(3)" expression-java="turn(3)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="eat" enable="true">
            <javadoc xml:space="preserve">This method allows the pig to eat the burgers. Once a burger is touched, it gets removed, and the "eating.wav" sound effect in the "sounds" folder gets played.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="burger" value="getOneIntersectingObject(Burger.class)" value-java="getOneIntersectingObject(Burger.class)" enable="true"/>
                <if condition="burger!=null" condition-java="burger != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.removeObject(burger)" expression-java="world.removeObject(burger)" enable="true"/>
                        <call expression="Greenfoot.playSound(&quot;eating.wav&quot;)" expression-java="Greenfoot.playSound(&quot;eating.wav&quot;)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="boolean" type-java="boolean" name="isGameWon" enable="true">
            <javadoc xml:space="preserve">In this method, the game is checking to see if there are any burger classes in the game. If the burger count is equal to zero, the game will consider isGameWon to be True.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                <if condition="world.getObjects(Burger.class).isEmpty()" condition-java="world.getObjects(Burger.class).isEmpty()" enable="true">
                    <ifStatements>
                        <return value="true" value-java="true" enable="true"/>
                    </ifStatements>
                    <else>
                        <return value="false" value-java="false" enable="true"/>
                    </else>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="transitionToGameWonWorld" enable="true">
            <javadoc xml:space="preserve">This method allows the game to transition to the Game Won World.</javadoc>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="gameWonWorld" value="new GameWonWorld()" value-java=" new GameWonWorld()" enable="true"/>
                <call expression="Greenfoot.setWorld(gameWonWorld)" expression-java="Greenfoot.setWorld(gameWonWorld)" enable="true"/>
            </body>
        </method>
    </methods>
</class>
